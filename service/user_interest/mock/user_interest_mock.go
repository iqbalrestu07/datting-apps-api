// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/user_interest.go

// Package user_interest is a generated GoMock package.
package user_interest

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/iqbalrestu07/datting-apps-api/domain"
)

// MockUserInterestRepository is a mock of UserInterestRepository interface.
type MockUserInterestRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserInterestRepositoryMockRecorder
}

// MockUserInterestRepositoryMockRecorder is the mock recorder for MockUserInterestRepository.
type MockUserInterestRepositoryMockRecorder struct {
	mock *MockUserInterestRepository
}

// NewMockUserInterestRepository creates a new mock instance.
func NewMockUserInterestRepository(ctrl *gomock.Controller) *MockUserInterestRepository {
	mock := &MockUserInterestRepository{ctrl: ctrl}
	mock.recorder = &MockUserInterestRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserInterestRepository) EXPECT() *MockUserInterestRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserInterestRepository) Create(ctx context.Context, ui *domain.UserInterest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, ui)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserInterestRepositoryMockRecorder) Create(ctx, ui interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserInterestRepository)(nil).Create), ctx, ui)
}

// FindAll mocks base method.
func (m *MockUserInterestRepository) FindAll(ctx context.Context, req domain.UserInterest) ([]domain.UserInterest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", ctx, req)
	ret0, _ := ret[0].([]domain.UserInterest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockUserInterestRepositoryMockRecorder) FindAll(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockUserInterestRepository)(nil).FindAll), ctx, req)
}
